# Algorithm:
# 1. configure frontend use nginx install, enable, start
# 2. remove default content in our nginx server
# 3. Download the frontend content
# 4. Extract the frontend content
# 5. create nginx reverse proxy configuration
# 6. Restart the nginx service

- name: configure frontend
  hosts: frontend
  become: yes
  tasks:
  - name: install nginx
    ansible.builtin.package:
      name: nginx
      state: present

  - name: start nginx
    ansible.builtin.service:
      name: nginx
      state: started
      enabled: yes

  - name: remove default html content
    ansible.builtin.file:
      file: /usr/share/nginx/html
      state: absent

  - name: create html content in specific directory
    ansible.builtin.file:
      file: /usr/share/nginx/html
      state: directory

  
   - name: download the frontend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-frontend-v2.zip
      dest: /tmp/frontend.zip

  - name: extract the code
    ansible.builtin.unarchive:
      src: /tmp/frontend.zip #by default ansible thinks this is in ansible server
      dest: /usr/share/nginx/html
      remote_src: yes    
  - name: copy expense conf
    ansible.builtin.copy:
      src: expense.conf
      dest: /etc/nginx/default.d/expense.conf

  - name: restart nginx
    ansible.builtin.service:
      name: nginx
      state: restarted


      
  