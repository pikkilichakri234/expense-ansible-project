# Algorithm:
# 1. To list dnf modules (disable, enable) use install node.js
# 2. add application user
# 3. create /app directory
# 4. to download the application code
# 5. unzip the application code
# 6. to download dependencies
# 7. setup systemd service for backend server
# 8. load the service
# 9. start the service
# 10. to install mysql-client
# 11. load schema
# 12. restart the service

- name: configure backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.omnamahashivaya.online
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download the backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: extract the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip #by default ansible thinks this is in ansible server
      dest: /app
      remote_src: yes #ansible by default thinks src is in ansible controll machine.

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: Import MySQL data
    community.mysql.mysql_db:
      state: import
      name: all # Replace with your database name
      target: /app/schema/backend.sql # Replace with the path to your SQL file
      login_host: "{{ login_host }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
       
  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend
  
